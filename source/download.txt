---
layout: page
title: Download and install
---

Download
============================================================

Here are the various binaries of **PyPy 1.2** that we provide for x86 Linux,
Mac OS/X or Windows.

+-------------------------------------------------+
| * `With a JIT Compiler`_ **(recommended!)**     |
| * `With no JIT Compiler`_                       |
| * `Sandboxed version`_                          |
| * `Stackless version`_                          |
| * `Building from source`_                       |
+-------------------------------------------------+

The release 1.2 of PyPy supports **Python version 2.5**. 
If you are interested in helping
with 2.6, 2.7 or 3.x features, `contact us`_!


.. _`With a JIT Compiler`:

"JIT Compiler" version
-------------------------------

These binaries include a Just-in-Time compiler.  They only work on
**32-bit** `x86 (IA-32)`_ CPUs that have the SSE2_ instruction set (most of
them do, nowadays), as well as on any `x86-64`_ machine in the 32-bit
compatibility mode.

* Linux binary
* Mac OS/X binary
* Windows binary (this version is alpha software!)

If your CPU is really old, it may not have SSE2.  In this case, you need
to translate_ yourself with the option ``--jit-backend=x86-without-sse2``.

If your CPU is a 64-bit machine and you want to translate_ a 32-bit
version of PyPy yourself, `here are hints`_.

If you want to help us with implementing the 64-bit JIT backend,
`contact us`_!


.. _`With no JIT Compiler`:
.. _`no jit version.`:

"No JIT" version
-------------------------------

**WARNING!** Unless you really want to try this out, we recommend the JIT
version.

This version still has a few advantages over the JIT Compiler version.
Notably, for Python programs that require large amounts of memory (at
least a few hundred MBs), the following version of ``pypy-c`` runs them
by requiring generally 1.5x or 2x less memory than CPython.  These
binaries work on 32-bit `x86 (IA-32)`_ CPUs as well as `x86-64`_ CPUs
in the 32-bit compatibility mode.

* Linux binary
* Mac OS/X binary
* Windows binary

If your CPU is a 64-bit machine and you want to translate_ a 32-bit
version of PyPy yourself, `here are hints`_.

If you want to help us with finishing the implementation of the native
64-bit version (there are a few known issues, like missing code in
`ctypes`_ to implement calls to C functions), `contact us`_ or
**donate money**!


.. _`Sandboxed version`:

"Sandbox" version
-------------------------------

A special safe version.  Read the docs about sandboxing_.  These
binaries work on 32-bit `x86 (IA-32)`_ CPUs as well as `x86-64`_ CPUs
in the 32-bit compatibility mode.

* Linux binary
* Mac OS/X binary
* Windows binary

It is also possible to translate_ a version that includes both
sandboxing and the JIT compiler, although as the JIT is relatively
complicated, this reduce a bit the level of confidence we can put in it.

If your CPU is a 64-bit machine and you want to translate_ a 32-bit
version of PyPy yourself, `here are hints`_.

The native 64-bit version needs testing and careful reviewing;
`contact us`_!


.. _`Stackless version`:

"Stackless" version
-------------------------------

Provides Stackless_ extensions, as well as greenlets_.  These
binaries work on 32-bit `x86 (IA-32)`_ CPUs as well as `x86-64`_ CPUs
in the 32-bit compatibility mode.

* Linux binary
* Mac OS/X binary
* Windows binary

It is not possible right now to combine Stackless features with the JIT.

If your CPU is a 64-bit machine and you want to translate_ a 32-bit
version of PyPy yourself, `here are hints`_.

For the native 64-bit version, see the issues of the `no jit version.`_.


.. _translate:

Building from source
-------------------------------

1. Get the source code.  The following packages contain the source at
   the same revision as the above binaries:

   * `pypy-1.2.0.tar.bz2`_ (sources, Unix line endings)
   * `pypy-1.2.0.zip`_ (sources, Windows line endings)

   Or you can checkout the current trunk using Subversion_ (the trunk
   usually works and is of course more up-to-date)::

     svn co http://codespeak.net/svn/pypy/trunk pypy-dist

2. Enter the ``goal`` directory::

     cd pypy-dist/pypy/translator/goal

3. Run the ``translate.py`` script.  Here are the common combinations
   of options::

     python translate.py -Ojit                # get the JIT version
     python translate.py -O2                  # get the no-jit version
     python translate.py --sandbox            # get the sandbox version
     python translate.py --stackless          # get the stackless version
     python translate.py -Ojit --backend=cli  # only for branch/cli-jit

4. Enjoy Mandelbrot ``:-)``  It takes on the order of one hour to
   finish the translation, and 1.3 GB of RAM on a 32-bit system.
   (Do not start a translation on a machine with 1GB or less!)


.. _`here are hints`:

Note on building a 32-bit version on 64-bit systems
+++++++++++++++++++++++++++++++++++++++++++++++++++

To build 32-bit versions of ``pypy-c`` you need to run ``translate.py``
in a 32-bit version of Python.  You can check with::

    $ python
    Python 2.6.2 (...)
    >>> import sys
    >>> sys.maxint

This prints 9223372036854775807 in 64-bit versions and 2147483647 in
32-bit versions.

On Linux, you may have to compile yourself a 32-bit Python, e.g.::

    cd Python-2.6.4
    CC="gcc -m32" LDFLAGS="-L/lib32 -L/usr/lib32 \
      -L`pwd`/lib32 -Wl,-rpath,/lib32 -Wl,-rpath,/usr/lib32" \
      ./configure
    make
    # and then use this ./python to run translate.py

On Mac OS/X: the easiest is to systematically use Python 2.5 when
working with PyPy.  Indeed, the standard Python 2.5 runs in 32-bit mode.

On Windows, I only know about the solution of installing a 32-bit Python
manually.


.. _`x86 (IA-32)`: http://en.wikipedia.org/wiki/IA-32
.. _`x86-64`: http://en.wikipedia.org/wiki/X86-64
.. _SSE2: http://en.wikipedia.org/wiki/SSE2
.. _`ctypes`: http://www.python.org/doc/2.5.4/lib/module-ctypes.html
.. _`contact us`: http://codespeak.net/mailman/listinfo/pypy-dev
.. _`sandboxing`: features.html#sandboxing
.. _`stackless`: http://www.stackless.com/
.. _`greenlets`: http://codespeak.net/svn/greenlet/trunk/doc/greenlet.txt
.. _`pypy-1.2.0.tar.bz2`: binaries/pypy-1.2.0.tar.bz2
.. _`pypy-1.2.0.zip`: binaries/pypy-1.2.0.zip
.. _Subversion: http://subversion.tigris.org/
