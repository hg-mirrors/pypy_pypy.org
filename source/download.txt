---
layout: page
title: Download and install
---

Download
============================================================

.. class:: download_menu

  There are `nightly binary builds`_ available. Those builds are not always
  as stable as the release, but they contain numerous bugfixes and 
  performance improvements. **Note that the OS X nightly builds
  (but not the release) are slightly
  miscompiled due to buildslave being old. Contributions are welcomed**.

Here are the binaries for the current release — **PyPy 2.2** — (`what's new
in PyPy 2.2?`_) for x86 and ARM Linux, Mac OS/X, Windows and the older release — **PyPy3 2.1 beta1** — (`what's new in
PyPy3 2.1 beta1?`_).

.. _what's new in PyPy3 2.1 beta1?: http://doc.pypy.org/en/latest/release-pypy3-2.1.0-beta1.html
.. _what's new in PyPy 2.2?: http://doc.pypy.org/en/latest/release-2.2.0.html


.. class:: download_menu

 * Download                         
                                                 
   * `Default (with a JIT Compiler)`_
   * `Other versions`_

 * `Installing`_ (optional)
 * `Building from source`_                       
 * `Packaging`_
 * `Checksums`_

.. _`Default (with a JIT Compiler)`:

"JIT Compiler" version
-------------------------------

These binaries include a Just-in-Time compiler.  They only work on
x86 CPUs that have the SSE2_ instruction set (most of
them do, nowadays), or on x86-64 CPUs. They also contain `stackless`_
extensions, like `greenlets`_.
(This is the official release 2.2;
for the most up-to-date version see below.)

2.2
---

Note that Linux binaries are dynamically linked, as is usual, and thus might
not be usable due to the sad story of linux binary compatibility.  This means
that **Linux binaries are only usable on the distributions written next to
them** unless you're ready to hack your system by adding symlinks to the
libraries it tries to open.  In general, we recommend either building from
source or downloading your PyPy from your release vendor. `Ubuntu`_ (`PPA`_),
`Debian`_, `Homebrew`_, MacPorts,
`Fedora`_, `Gentoo`_ and `Arch`_ are known to package PyPy, with various
degrees of being up-to-date.

.. _`Ubuntu`: http://packages.ubuntu.com/raring/pypy
.. _`PPA`: https://launchpad.net/~pypy/+archive/ppa
.. _`Debian`: http://packages.debian.org/sid/pypy
.. _`Fedora`: http://fedoraproject.org/wiki/Features/PyPyStack
.. _`Gentoo`: http://packages.gentoo.org/package/dev-python/pypy
.. _`Homebrew`: https://github.com/mxcl/homebrew/blob/master/Library/Formula/pypy.rb
.. _`Arch`: https://wiki.archlinux.org/index.php/PyPy

* `Linux x86 binary (32bit, tar.bz2 built on Ubuntu 10.04.4 LTS)`__ (see ``[1]`` below)
* `Linux x86 binary (64bit, tar.bz2 built on Ubuntu 12.04.2 LTS)`__ (see ``[1]`` below)
* `ARM Hardfloat Linux binary (ARMHF/gnueabihf, tar.bz2, Raspbian)`__ (see ``[1]`` below)
* `ARM Hardfloat Linux binary (ARMHF/gnueabihf, tar.bz2, Ubuntu Raring)`__ (see ``[1]`` below)
* `ARM Softfloat Linux binary (ARMEL/gnueabi, tar.bz2,  Ubuntu Precise)`__ (see ``[1]`` below)
* `Mac OS/X binary (64bit)`__
* Windows binary (32bit) **COMING SOON** (you might need the `VS 2008 runtime library
  installer vcredist_x86.exe`_.)
* `Source (tar.bz2)`__
* `Source (zip)`__
* `All our downloads,`__ including previous versions.  We also have a
  mirror_, but please use only if you have troubles accessing the links above

.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-linux.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-linux64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-linux-armhf-raspbian.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-linux-armhf-raring.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-linux-armel.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-osx64.tar.bz2
.. NOTREADY https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-win32.zip
.. _`VS 2008 runtime library installer vcredist_x86.exe`: http://www.microsoft.com/en-us/download/details.aspx?id=5582
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-src.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-src.zip
.. __: https://bitbucket.org/pypy/pypy/downloads
.. _mirror: http://cobra.cs.uni-duesseldorf.de/~buildmaster/mirror/

PyPy3 2.1 Beta 1
----------------

Note that Linux binaries are dynamically linked, as is usual, and thus might
not be usable due to the sad story of linux binary compatibility.  This means
that **Linux binaries are only usable on the distributions written next to
them** unless you're ready to hack your system by adding symlinks to the
libraries it tries to open.

* `Linux binary (32bit, tar.bz2 built on Ubuntu 10.04.4 LTS)`__ (see ``[1]`` below)
* `Linux binary (64bit, tar.bz2 built on Ubuntu 12.04.2 LTS)`__ (see ``[1]`` below)
* `ARM Hardfloat Linux binary (ARMHF/gnueabihf, tar.bz2, Raspbian)`__ (see ``[1]`` below)
* `ARM Hardfloat Linux binary (ARMHF/gnueabihf, tar.bz2, Ubuntu Raring)`__ (see ``[1]`` below)
* `ARM Softfloat Linux binary (ARMEL/gnueabi, tar.bz2,  Ubuntu Precise)`__ (see ``[1]`` below)
* `Mac OS/X binary (64bit)`__
* `Windows binary (32bit)`__ (you might need the `VS 2008 runtime library
  installer vcredist_x86.exe`_.)
* `Source (tar.bz2)`__
* `Source (zip)`__
* `All our downloads,`__ including previous versions.  We also have a
  mirror_, but please use only if you have troubles accessing the links above

.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-linux.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-linux64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-linux-armhf-raspbian.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-linux-armhf-raring.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-linux-armel.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-osx64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-win32.zip
.. _`VS 2008 runtime library installer vcredist_x86.exe`: http://www.microsoft.com/en-us/download/details.aspx?id=5582
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-src.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.1-beta1-src.zip
.. __: https://bitbucket.org/pypy/pypy/downloads

If your CPU is really old, it may not have SSE2.  In this case, you need
to translate_ yourself with the option ``--jit-backend=x86-without-sse2``.

``[1]:`` stating it again: the Linux binaries are provided for the
distributions listed here.  **If your distribution is not exactly this
one, it won't work,** likely: ``pypy: error while loading shared
libraries: ...``.  You need to hack a lot --- or you need to translate_
your own version from source --- or you need to wait until your
distribution adds a package, see above --- or you can try the statically
linked versions listed above.


.. _`Other versions (without a JIT)`:

Other versions
-------------------------------

The other versions of PyPy are:

* The most up-to-date `nightly build`_ with a JIT, if the official
  release is too old for what you want to do. There are versions for
  different libc on this site too.

* Sandboxing: A special safe version.  Read the docs about sandboxing_.
  (It is also possible to translate_ a version that includes both
  sandboxing and the JIT compiler, although as the JIT is relatively
  complicated, this reduces a bit the level of confidence we can put in
  the result.) **Note that the sandboxed binary needs a full pypy checkout
  to work**. Consult the `sandbox docs`_ for details. (These are old,
  PyPy 1.8.)

  * `Linux binary (64bit)`__

  * `Linux binary (32bit)`__

.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-1.8-sandbox-linux64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-1.8-sandbox-linux.tar.bz2
.. _`sandbox docs`: http://doc.pypy.org/en/latest/sandbox.html

.. _`nightly build`: http://buildbot.pypy.org/nightly/trunk/

Installing
-------------------------------

All binary versions are packaged in a ``tar.bz2`` or ``zip`` file.  When
uncompressed, they run in-place.  For now you can uncompress them
either somewhere in your home directory or, say, in ``/opt``, and
if you want, put a symlink from somewhere like
``/usr/local/bin/pypy`` to ``/path/to/pypy-2.2/bin/pypy``.  Do
not move or copy the executable ``pypy`` outside the tree --- put
a symlink to it, otherwise it will not find its libraries.


.. _translate:

Building from source
-------------------------------

1. Get the source code.  The following packages contain the source at
   the same revision as the above binaries:

   * `pypy-2.2-src.tar.bz2`__ (sources, Unix line endings)
   * `pypy-2.2-src.zip`__ (sources, Unix line endings too, sorry)

   .. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-src.tar.bz2
   .. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.2-src.zip

   Or you can checkout the current trunk using Mercurial_ (the trunk
   usually works and is of course more up-to-date)::

     hg clone https://bitbucket.org/pypy/pypy

2. Make sure you **installed the dependencies.**  See the list here__.

   .. __: http://pypy.readthedocs.org/en/latest/getting-started-python.html#translating-the-pypy-python-interpreter

3. Enter the ``goal`` directory::

     cd pypy/pypy/goal

4. Run the ``rpython`` script.  Here are the common combinations
   of options (works also with ``python`` instead of ``pypy``)::

     pypy ../../rpython/bin/rpython -Ojit targetpypystandalone           # get the JIT version
     pypy ../../rpython/bin/rpython -O2 targetpypystandalone             # get the no-jit version
     pypy ../../rpython/bin/rpython -O2 --sandbox targetpypystandalone   # get the sandbox version

5. Enjoy Mandelbrot ``:-)``  It takes on the order of half an hour to
   finish the translation, and 2.x GB of RAM on a 32-bit system
   and 4.x GB on 64-bit systems.  (Do not start a translation on a
   machine with insufficient RAM!  It will just swap forever.  See
   notes below in that case.)

Notes:

* It is recommended to use PyPy to do translations, instead of using CPython,
  because it is twice as fast.  You should just start by downloading an
  official release of PyPy (with the JIT).  If you really have to use CPython
  then note that we are talking about CPython 2.5-2.7 here, not CPython 3.x.

* If RAM usage is a problem (or if you are on Windows, because win32's limit
  is 2 GB unless you hack a lot), then you can (for now) tweak some parameters
  via environment variables and command-line options.  The following command
  takes a bit more time, but finishes with only using 3.0 GB of RAM (on
  Linux 64-bit; probably not much more than 1.6 GB on 32-bit).  It should be
  noted that it is less than with CPython. ::

    PYPY_GC_MAX_DELTA=200MB pypy --jit loop_longevity=300 ../../rpython/bin/rpython -Ojit targetpypystandalone

* On Linux, because of ``asmgcroot``, compiling the generated C files
  is delicate.  It requires using gcc with no particularly
  fancy options.  It does not work e.g. with clang, or if you pass uncommon
  options with the ``CFLAGS`` environment variable.  If you insist on
  passing these options or using clang, then you can compile PyPy with
  the `shadow stack`_ option instead (for a small performance price in
  non-JITted code).

.. _`x86 (IA-32)`: http://en.wikipedia.org/wiki/IA-32
.. _`x86-64`: http://en.wikipedia.org/wiki/X86-64
.. _SSE2: http://en.wikipedia.org/wiki/SSE2
.. _`contact us`: contact.html
.. _`sandboxing`: features.html#sandboxing
.. _`stackless`: http://www.stackless.com/
.. _`greenlets`: http://codespeak.net/svn/greenlet/trunk/doc/greenlet.txt
.. _Mercurial: http://mercurial.selenic.com/
.. _`nightly binary builds`: http://buildbot.pypy.org/nightly/trunk/
.. _`shadow stack`: http://pypy.readthedocs.org/en/latest/config/translation.gcrootfinder.html


Packaging
---------

Once PyPy is translated from source the binary package similar to those provided in the section `Default (with a JIT Compiler)`_ above could be easily created with ``package.py`` script as following::

    cd ./pypy/pypy/tool/release/
    python package.py ../../.. pypy-my-own-package-name

Checksums
---------

Here are the checksums for each of the downloads (md5 and sha1)::


   28b38b2417c3cad4c32db120f718bcd9  pypy-2.2-linux.tar.bz2
   2ce3be921d063eff8286be2e82649638  pypy-2.2-linux64.tar.bz2
   c50373a6c2517b43c65fd84ac2cd3a6f  pypy-2.2-linux-armel.tar.bz2
   830fdcfafae461d8e72daa94a1ab4499  pypy-2.2-linux-armhf-raring.tar.bz2
   e9c9f28cba22d07445e9195c1d2fede6  pypy-2.2-linux-armhf-raspbian.tar.bz2
   690783f07340888a0fa180789de789da  pypy-2.2-osx64.tar.bz2
   9943c7a008535c99fed6bbe1c5a22797  pypy-2.1-win32.zip
   5a5a3822605d7d811066b1b279da3c6e  pypy-2.2-src.tar.bz2
   621be5b01a39f389be43c1bb32430722  pypy-2.2-src.zip
   f6adca4d26f34bef9903cc5347c7d688  pypy3-2.1-beta1-linux64.tar.bz2
   d57d0d0d3c49c7cce75440924d8f66b7  pypy3-2.1-beta1-linux-armel.tar.bz2
   55b82b199ccf537c7ea5e2f31df78dfe  pypy3-2.1-beta1-linux-armhf-raring.tar.bz2
   a43e64557fe27b979a8546a89c05652f  pypy3-2.1-beta1-linux-armhf-raspbian.tar.bz2
   9ae9d0b67279c557fb4b7f57c3072d0f  pypy3-2.1-beta1-linux.tar.bz2
   36634bf17f0e9852fda7cc6745f2df28  pypy3-2.1-beta1-osx64.tar.bz2
   026c8be208bf2ef742ddfa3f8ca41a05  pypy3-2.1-beta1-win32.zip
   bc2013d1927dc1c0c91228e566abd8da  pypy3-2.1-beta1-src.tar.bz2
   cba4bdcfaed94185b20637379cb236b9  pypy3-2.1-beta1-src.zip
   2c9f0054f3b93a6473f10be35277825a  pypy-1.8-sandbox-linux64.tar.bz2
   009c970b5fa75754ae4c32a5d108a8d4  pypy-1.8-sandbox-linux.tar.bz2

   88bdb95b3132f6d8390a43dfd9820f588a795c5d  pypy-2.2-linux.tar.bz2
   3fbe12bce1d8e3bc88175992e838c0731406c7e7  pypy-2.2-linux64.tar.bz2
   2c90ac7aa2a61b29a15a48de62048742210e3769  pypy-2.2-linux-armel.tar.bz2
   7d13a51f7e1eee2ceb07e614a74d3c306b9bd036  pypy-2.2-linux-armhf-raring.tar.bz2
   3cf8c596d99c22f86a0789985f5ed59dfc24c145  pypy-2.2-linux-armhf-raspbian.tar.bz2
   6091171ebebb6f02e15b181d2a9a00e79c5b26a7  pypy-2.2-osx64.tar.bz2
   e0d6105925cf565863e97a636b783f1c1309307e  pypy-2.1-win32.zip
   668b902590f35a1bb0c2e1005abe7e131280bbca  pypy-2.2-src.tar.bz2
   85d2468e777d16753219c7596272e6d60a3adbac  pypy-2.2-src.zip
   6aa8377a09f79f1ce145537865d80716e40378de  pypy3-2.1-beta1-linux64.tar.bz2
   c948aa751500e20df0678695524c6fc5088da39c  pypy3-2.1-beta1-linux-armel.tar.bz2
   b316e04cd99abccfcfe7007df7ce78e56feb8889  pypy3-2.1-beta1-linux-armhf-raring.tar.bz2
   292851e698dcf2f1f9875198d1617a9f3afde635  pypy3-2.1-beta1-linux-armhf-raspbian.tar.bz2
   dff08887a9746b9cbb5cb88e29243f7d1aa7639c  pypy3-2.1-beta1-linux.tar.bz2
   4455121f59214332b77d7c93e1d1849d0507d4cb  pypy3-2.1-beta1-osx64.tar.bz2
   02749917c4c6898d8c616abf16061cf926d8b3e5  pypy3-2.1-beta1-win32.zip
   ea56727de793b71f15f741e600dffd0291b77964  pypy3-2.1-beta1-src.tar.bz2
   255243e214f1f941598cfafcf753d99ceca18547  pypy3-2.1-beta1-src.zip
   895aaf7bba5787dd30adda5cc0e0e7fc297c0ca7  pypy-1.8-sandbox-linux64.tar.bz2
   be94460bed8b2682880495435c309b6611ae2c31  pypy-1.8-sandbox-linux.tar.bz2
