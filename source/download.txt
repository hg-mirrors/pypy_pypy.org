---
layout: page
title: Download and install
---

Download
============================================================

Here are the various binaries of **PyPy 1.4** that we provide for x86 Linux,
Mac OS/X or Windows. This release improves over 1.3 in terms of speed,
memory usage and stability.

.. class:: download_menu

 * Download                         
                                                 
   * `Default (with a JIT Compiler)`_
   * `Sandboxed version`_                        
   * `Stackless version`_                        
                                                 
 * `Installing`_ (optional)                      
 * `Building from source`_                       

.. _`Default (with a JIT Compiler)`:

"JIT Compiler" version
-------------------------------

These binaries include a Just-in-Time compiler.  They only work on
CPUs that have the SSE2_ instruction set (most of
them do, nowadays).

* `Linux binary (32bit)`__
* `Linux binary (64bit)`__
* `Mac OS/X binary (32bit)`__
* `Mac OS/X binary (64bit)`__
* `Windows binary (32bit)`__

.. __: http://pypy.org/download/pypy-1.4-linux.tar.bz2
.. __: http://pypy.org/download/pypy-1.4-linux64.tar.bz2
.. __: http://pypy.org/download/pypy-1.4-osx.tar.bz2
.. __: http://pypy.org/download/pypy-1.4-osx64.tar.bz2
.. __: http://pypy.org/download/pypy-1.4-win32.zip

If your CPU is really old, it may not have SSE2.  In this case, you need
to translate_ yourself with the option ``--jit-backend=x86-without-sse2``.

.. _`Sandboxed version`:

"Sandbox" version
-------------------------------

A special safe version.  Read the docs about sandboxing_.  These
binaries work on 32-bit `x86 (IA-32)`_ CPUs as well as `x86-64`_ CPUs
in the 32-bit compatibility mode.

* `Linux binary`__
* `Mac OS/X binary`__

.. __: http://pypy.org/download/pypy-1.2-linux-sandbox.bz2
.. __: http://pypy.org/download/pypy-1.2-osx-sandbox.bz2

It is also possible to translate_ a version that includes both
sandboxing and the JIT compiler, although as the JIT is relatively
complicated, this reduce a bit the level of confidence we can put in
the result.

The Windows need testing and careful reviewing; `contact us`_!

.. _`Stackless version`:

"Stackless" version
-------------------------------

Provides Stackless_ extensions, as well as greenlets_.  These
binaries work on 32-bit `x86 (IA-32)`_ CPUs as well as `x86-64`_ CPUs
in the 32-bit compatibility mode.

* `Linux binary`__
* `Windows binary`__

.. __: http://pypy.org/download/pypy-1.4-linux-stackless.tar.bz2
.. __: http://pypy.org/download/pypy-1.4-win32-stackless.zip

It is not possible right now to combine Stackless features with the JIT.

Installing
-------------------------------

All versions are packaged in a ``tar.bz2`` or ``zip`` file.  When
uncompressed, they run in-place.  On Linux or Mac OS/X, they can also be
installed by manually moving the files::

    /usr/bin/pypy     # or pypy-nojit etc.
    /usr/share/pypy-1.4/lib-python/*
    /usr/share/pypy-1.4/pypy/*

You can also install it to ``/usr/local/bin`` and ``/usr/local/share``.


.. _translate:

Building from source
-------------------------------

1. Get the source code.  The following packages contain the source at
   the same revision as the above binaries (these are svn exports):

   * `pypy-1.4-src.tar.bz2`__ (sources, Unix line endings)
   * `pypy-1.4-src.zip`__ (sources, Windows line endings)

   .. __: http://pypy.org/download/pypy-1.4-src.tar.bz2
   .. __: http://pypy.org/download/pypy-1.4-src.zip

   Or you can checkout the current trunk using Subversion_ (the trunk
   usually works and is of course more up-to-date)::

     svn co http://codespeak.net/svn/pypy/trunk pypy-trunk

   Windows users trying the zip file are expected to use MSVC.
   The trunk version contains fixes to support MinGW32.  More
   information on `our dev site`__.

   .. __: http://codespeak.net/pypy/trunk/pypy/doc/windows.html

2. Make sure you installed the dependencies.  See the list here__.

   .. __: http://codespeak.net/pypy/dist/pypy/doc/getting-started-python.html#translating-the-pypy-python-interpreter

3. Enter the ``goal`` directory::

     cd pypy-trunk/pypy/translator/goal

4. Run the ``translate.py`` script.  Here are the common combinations
   of options::

     python translate.py -Ojit                # get the JIT version
     python translate.py -O2                  # get the no-jit version
     python translate.py --sandbox            # get the sandbox version
     python translate.py --stackless          # get the stackless version
     python translate.py -Ojit --backend=cli  # only for branch/cli-jit

5. Enjoy Mandelbrot ``:-)``  It takes on the order of one hour to
   finish the translation, and 1.3 GB of RAM on a 32-bit system.
   (Do not start a translation on a machine with 1GB or less!)

.. _`x86 (IA-32)`: http://en.wikipedia.org/wiki/IA-32
.. _`x86-64`: http://en.wikipedia.org/wiki/X86-64
.. _SSE2: http://en.wikipedia.org/wiki/SSE2
.. _`ctypes`: http://www.python.org/doc/2.5.4/lib/module-ctypes.html
.. _`contact us`: contact.html
.. _`sandboxing`: features.html#sandboxing
.. _`stackless`: http://www.stackless.com/
.. _`greenlets`: http://codespeak.net/svn/greenlet/trunk/doc/greenlet.txt
.. _Subversion: http://subversion.tigris.org/
