---
layout: page
title: Download and install
---

Download
============================================================

.. class:: download_menu

  There are `nightly binary builds`_ available. Those builds are not always
  as stable as the release, but they contain numerous bugfixes and
  performance improvements. **Note that the OS X nightly builds
  (but not the release) are slightly
  miscompiled due to buildslave being old. Contributions are welcomed**.

We provide binaries for x86 and ARM Linux, Mac OS/X and Windows for:

* the Python2.7 compatible release — **PyPy 2.5.0** — (`what's new in PyPy 2.5.0?`_ )
* the Python3.2.5 compatible release — **PyPy3 2.4.0** — (`what's new in PyPy3 2.4.0?`_).

.. _what's new in PyPy 2.5.0?: http://doc.pypy.org/en/latest/release-2.5.0.html
.. _what's new in PyPy3 2.4.0?: http://doc.pypy.org/en/latest/release-pypy3-2.4.0.html


.. class:: download_menu

 * Download

   * `Default (with a JIT Compiler)`_
   * `Other versions`_

 * `Installing`_ (optional)
 * `Installing more modules`_
 * `Installing NumPy`_ (optional)
 * `Building from source`_
 * `Packaging`_
 * `Checksums`_

.. _`Default (with a JIT Compiler)`:

"JIT Compiler" version
-------------------------------

These binaries include a Just-in-Time compiler.  They only work on
x86 CPUs that have the SSE2_ instruction set (most of
them do, nowadays), or on x86-64 CPUs. They also contain `stackless`_
extensions, like `greenlets`_.

Linux binaries and common distributions
---------------------------------------

Linux binaries are dynamically linked, as is usual, and thus might
not be usable due to the sad story of linux binary compatibility.  This means
that **Linux binaries are only usable on the distributions written next to
them** unless you're ready to hack your system by adding symlinks to the
libraries it tries to open.  In general, we recommend either building from
source or downloading your PyPy from your release vendor. `Ubuntu`_ (`PPA`_),
`Debian`_, `Homebrew`_, MacPorts,
`Fedora`_, `Gentoo`_ and `Arch`_ are known to package PyPy, with various
degrees of being up-to-date.  You may have more luck trying out Squeaky's
`portable Linux binaries`_.

.. _`Ubuntu`: http://packages.ubuntu.com/raring/pypy
.. _`PPA`: https://launchpad.net/~pypy/+archive/ppa
.. _`Debian`: http://packages.debian.org/sid/pypy
.. _`Fedora`: http://fedoraproject.org/wiki/Features/PyPyStack
.. _`Gentoo`: http://packages.gentoo.org/package/dev-python/pypy
.. _`Homebrew`: https://github.com/mxcl/homebrew/blob/master/Library/Formula/pypy.rb
.. _`Arch`: https://wiki.archlinux.org/index.php/PyPy
.. _`portable Linux binaries`: https://github.com/squeaky-pl/portable-pypy


Python2.7 compatible PyPy 2.5.0
-----------------------------------

* `Linux x86 binary (32bit, tar.bz2 built on Ubuntu 12.04 - 14.04)`__ (see ``[1]`` below)
* `Linux x86-64 binary (64bit, tar.bz2 built on Ubuntu 12.04 - 14.04)`__ (see ``[1]`` below)
* `ARM Hardfloat Linux binary (ARMHF/gnueabihf, tar.bz2, Raspbian)`__ (see ``[1]`` below)
* `ARM Hardfloat Linux binary (ARMHF/gnueabihf, tar.bz2, Ubuntu Raring)`__ (see ``[1]`` below)
* `ARM Softfloat Linux binary (ARMEL/gnueabi, tar.bz2,  Ubuntu Precise)`__ (see ``[1]`` below)
* `Mac OS/X binary (64bit)`__
* `Windows binary (32bit)`__ (you might need the `VS 2008 runtime library
* `Source (tar.bz2)`__
* `Source (zip)`__
  installer vcredist_x86.exe`_.)
* `All our downloads,`__ including previous versions.  We also have a
  mirror_, but please use only if you have troubles accessing the links above
* See below for the sources.

.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-linux.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-linux64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-linux-armhf-raspbian.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-linux-armhf-raring.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-linux-armel.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-osx64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-win32.zip
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-src.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-src.zip
.. _`VS 2008 runtime library installer vcredist_x86.exe`: http://www.microsoft.com/en-us/download/details.aspx?id=5582
.. __: https://bitbucket.org/pypy/pypy/downloads
.. _mirror: http://cobra.cs.uni-duesseldorf.de/~buildmaster/mirror/

Python 3.2.5 compatible PyPy3 2.4.0
-----------------------------------

* `Linux x86 binary (32bit, tar.bz2 built on Ubuntu 10.04.4 LTS)`__ (see ``[1]`` below)
* `Linux x86-64 binary (64bit, tar.bz2 built on Ubuntu 12.04 - 14.04)`__ (see ``[1]`` below)
* `ARM Hardfloat Linux binary (ARMHF/gnueabihf, tar.bz2, Raspbian)`__ (see ``[1]`` below)
* `ARM Hardfloat Linux binary (ARMHF/gnueabihf, tar.bz2, Ubuntu Raring)`__ (see ``[1]`` below)
* `ARM Softfloat Linux binary (ARMEL/gnueabi, tar.bz2,  Ubuntu Precise)`__ (see ``[1]`` below)
* `Mac OS/X binary (64bit)`__
* `Windows binary (32bit)`__ (you might need the `VS 2008 runtime library
  installer vcredist_x86.exe`_.)
* `Source (tar.bz2)`__
* `Source (zip)`__
* `All our downloads,`__ including previous versions.  We also have a
  mirror_, but please use only if you have troubles accessing the links above

.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-linux.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-linux64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-linux-armhf-raspbian.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-linux-armhf-raring.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-linux-armel.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-osx64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-win32.zip
.. _`VS 2008 runtime library installer vcredist_x86.exe`: http://www.microsoft.com/en-us/download/details.aspx?id=5582
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-src.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy3-2.4.0-src.zip
.. __: https://bitbucket.org/pypy/pypy/downloads

If your CPU is really old, it may not have SSE2.  In this case, you need
to translate_ yourself with the option ``--jit-backend=x86-without-sse2``.

``[1]:`` stating it again: the Linux binaries are provided for the
distributions listed here.  **If your distribution is not exactly this
one, it won't work,** you will probably see: ``pypy: error while loading shared
libraries: ...``.  Unless you want to hack a lot, try out the
`portable Linux binaries`_.


.. _`Other versions (without a JIT)`:

Other versions
-------------------------------

The other versions of PyPy are:

* The most up-to-date `nightly build`_ with a JIT, if the official
  release is too old for what you want to do. There are versions for
  different libc on this site too.

* Sandboxing: A special safe version.  Read the docs about sandboxing_.
  (It is also possible to translate_ a version that includes both
  sandboxing and the JIT compiler, although as the JIT is relatively
  complicated, this reduces a bit the level of confidence we can put in
  the result.) **Note that the sandboxed binary needs a full pypy checkout
  to work**. Consult the `sandbox docs`_ for details. (These are old,
  PyPy 1.8.)

  * `Linux binary (64bit)`__

  * `Linux binary (32bit)`__

.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-1.8-sandbox-linux64.tar.bz2
.. __: https://bitbucket.org/pypy/pypy/downloads/pypy-1.8-sandbox-linux.tar.bz2
.. _`sandbox docs`: http://doc.pypy.org/en/latest/sandbox.html

.. _`nightly build`: http://buildbot.pypy.org/nightly/trunk/

Installing
-------------------------------

All binary versions are packaged in a ``tar.bz2`` or ``zip`` file.  When
uncompressed, they run in-place.  For now you can uncompress them
either somewhere in your home directory or, say, in ``/opt``, and
if you want, put a symlink from somewhere like
``/usr/local/bin/pypy`` to ``/path/to/pypy-2.5.0/bin/pypy``.  Do
not move or copy the executable ``pypy`` outside the tree --- put
a symlink to it, otherwise it will not find its libraries.


Installing more modules
-------------------------------

The recommended way is to install ``pip``, which is the standard package
manager of Python.  It works like it does on CPython.  One practical
difference, though, is that it usually comes pre-packaged for you when
you get CPython from a place like your Linux distribution.  In the case
of PyPy (or CPython if you download it from http://www.python.org/),
you need to get it separately, as explained `in our FAQ.`__

.. __: http://pypy.readthedocs.org/en/latest/faq.html#module-xyz-does-not-work-with-pypy-importerror


Installing NumPy
-------------------------------

NumPy is an exception to the rule that most packages work without
changes.  The "numpy" module needs to be installed from `our own
repository`__ rather than from the official source.

.. __: https://bitbucket.org/pypy/numpy

If you have pip::

    pypy -m pip install git+https://bitbucket.org/pypy/numpy.git

Alternatively, the direct way::

    git clone https://bitbucket.org/pypy/numpy.git
    cd numpy
    pypy setup.py install

If you installed to a system directory, you need to also run this once::

    sudo pypy -c 'import numpy'

Note that NumPy support is still a work-in-progress, many things do not
work and those that do may not be any faster than NumPy on CPython.
For further instructions see `the pypy/numpy repository`__.

.. __: https://bitbucket.org/pypy/numpy


.. _translate:

Building from source
-------------------------------

1. Get the source code.  The following packages contain the source at
   the same revision as the above binaries:

   * `pypy-2.5.0-src.tar.bz2`__ (sources)

   .. __: https://bitbucket.org/pypy/pypy/downloads/pypy-2.5.0-src.tar.bz2

   Or you can checkout the current trunk using Mercurial_ (the trunk
   usually works and is of course more up-to-date)::

     hg clone https://bitbucket.org/pypy/pypy

2. Make sure you **installed the dependencies.**  See the list here__.

   .. __: http://pypy.readthedocs.org/en/latest/build.html#install-build-time-dependencies

3. Enter the ``goal`` directory::

     cd pypy/pypy/goal

4. Run the ``rpython`` script.  Here are the common combinations
   of options (works also with ``python`` instead of ``pypy``;
   requires Python 2.x or PyPy 2)::

     pypy ../../rpython/bin/rpython -Ojit targetpypystandalone           # get the JIT version
     pypy ../../rpython/bin/rpython -O2 targetpypystandalone             # get the no-jit version
     pypy ../../rpython/bin/rpython -O2 --sandbox targetpypystandalone   # get the sandbox version

5. Enjoy Mandelbrot ``:-)``  It takes on the order of an hour to
   finish the translation, and 2.x GB of RAM on a 32-bit system
   and 4.x GB on 64-bit systems.  (Do not start a translation on a
   machine with insufficient RAM!  It will just swap forever.  See
   notes below in that case.)

6. If you want to install this PyPy as root, please read the next section.

Notes:

* It is recommended to use PyPy to do translations, instead of using CPython,
  because it is twice as fast.  You should just start by downloading an
  official release of PyPy (with the JIT).  If you really have to use CPython
  then note that we are talking about CPython 2.5-2.7 here, not CPython 3.x.

* If RAM usage is a problem (or if you are on Windows, because win32's limit
  is 2 GB unless you hack a lot), then you can (for now) tweak some parameters
  via environment variables and command-line options.  The following command
  takes a bit more time, but finishes with only using 3.0 GB of RAM (on
  Linux 64-bit; probably not much more than 1.6 GB on 32-bit).  It should be
  noted that it is less than with CPython. ::

    PYPY_GC_MAX_DELTA=200MB pypy --jit loop_longevity=300 ../../rpython/bin/rpython -Ojit targetpypystandalone

* On Linux, because of ``asmgcroot``, compiling the generated C files
  is delicate.  It requires using gcc with no particularly
  fancy options.  It does not work e.g. with clang, or if you pass uncommon
  options with the ``CFLAGS`` environment variable.  If you insist on
  passing these options or using clang, then you can compile PyPy with
  the `shadow stack`_ option instead (for a small performance price in
  non-JITted code).

.. _`x86 (IA-32)`: http://en.wikipedia.org/wiki/IA-32
.. _`x86-64`: http://en.wikipedia.org/wiki/X86-64
.. _SSE2: http://en.wikipedia.org/wiki/SSE2
.. _`contact us`: contact.html
.. _`sandboxing`: features.html#sandboxing
.. _`stackless`: http://www.stackless.com/
.. _`greenlets`: http://pypy.readthedocs.org/en/latest/stackless.html#greenlets
.. _Mercurial: http://mercurial.selenic.com/
.. _`nightly binary builds`: http://buildbot.pypy.org/nightly/trunk/
.. _`shadow stack`: http://pypy.readthedocs.org/en/latest/config/translation.gcrootfinder.html


Packaging
---------

Once PyPy is translated from source the binary package similar to those provided in the section `Default (with a JIT Compiler)`_ above could be easily created with ``package.py`` script as following::

    cd ./pypy/pypy/tool/release/
    python package.py --help #for information
    python package.py --archive-name pypy-my-own-package-name

It is recommended to use package.py because custom scripts will
invariably become out-of-date.  If you want to write custom scripts
anyway, note an easy-to-miss point: some modules are written with CFFI,
and require some compilation.  If you install PyPy as root without
pre-compiling them, normal users will get permission errors.  This means
you need to run for example ``pypy -c "import gdbm"`` during the
installation process (see the exact list in `package.py`_).  Users
seeing a broken installation of PyPy can also fix it after-the-fact, if
they have sudo rights, by running ``sudo pypy -c "import gdbm"``.

.. _`package.py`: https://bitbucket.org/pypy/pypy/src/default/pypy/tool/release/package.py

Checksums
---------

Here are the checksums for each of the downloads (md5 and sha1)::



   0a109c96bbce20931c17dfded57a3d46  pypy-2.5.0-linux64.tar.bz2
   fc79e0ef640371fa7bdbb040c3211bcf  pypy-2.5.0-linux-armel.tar.bz2
   d8d0fe8a1503a7ed4ec5ff52d0630b88  pypy-2.5.0-linux-armhf-raring.tar.bz2
   9a4430abd36dd619c45705c3fe70f5ca  pypy-2.5.0-linux-armhf-raspbian.tar.bz2
   1c14e954fdd1d112540790ec5b0cea26  pypy-2.5.0-linux.tar.bz2
   9916a1485f32953a46afdd36f8f01f83  pypy-2.5.0-osx64.tar.bz2
   f4700c0af45e986178b36ce91a45136e  pypy-2.5.0-src.tar.bz2
   2461a4e4fe4ea64ce7fb1a07aa310e6a  pypy-2.5.0-win32.zip

   eadbc9790823fc0ae40c943087cd7cb3  pypy3-2.4.0-linux64.tar.bz2
   7ab84727da2d5363866907f2f7921d86  pypy3-2.4.0-linux-armel.tar.bz2
   83158d3a55ca134b179ef01dc2bb6a30  pypy3-2.4.0-linux-armhf-raring.tar.bz2
   b0b81cfa46e970c584bda10feebe1a85  pypy3-2.4.0-linux-armhf-raspbian.tar.bz2
   68af7a6ca5948a1448a4b9c839d1472c  pypy3-2.4.0-linux.tar.bz2
   c6cd12602469446db1dfa1e2bc6c699c  pypy3-2.4.0-osx64.tar.bz2
   8514f16b1a6262828e824bd8b37607db  pypy3-2.4.0-win32.zip
   96ba72916114d16904e12562b5d84e51  pypy3-2.4.0-src.tar.bz2
   c58015d0d3e08a9f24b93b8edca26d4d  pypy3-2.4.0-src.zip

   2c9f0054f3b93a6473f10be35277825a  pypy-1.8-sandbox-linux64.tar.bz2
   009c970b5fa75754ae4c32a5d108a8d4  pypy-1.8-sandbox-linux.tar.bz2

   303bdc29e80640e337f1d65c7787870738a3ebf5  pypy-2.5.0-linux64.tar.bz2
   1bc8de2db37233051d84c9c27e1e64608283b67c  pypy-2.5.0-linux-armel.tar.bz2
   01427d7dd52e2b679c38bfad414ebe676b019ea0  pypy-2.5.0-linux-armhf-raring.tar.bz2
   e3483d52182ab3ee02f665fda02f9fac4ab40ab1  pypy-2.5.0-linux-armhf-raspbian.tar.bz2
   7334013255670f4ae60b316a5b35499861e0714f  pypy-2.5.0-linux.tar.bz2
   ad47285526b1b3c14f4eecc874bb82a133a8e551  pypy-2.5.0-osx64.tar.bz2
   1d215a22ea16581de338700d556b21a8c02b4eff  pypy-2.5.0-src.tar.bz2
   3492aa6fe96987537b23d09d66bb0c52f1760652  pypy-2.5.0-win32.zip

   7d715742f6929351b310a2ca3b924cab35913089  pypy3-2.4.0-linux64.tar.bz2
   b33e817f3557f91c434032c9f74e5220fe70036c  pypy3-2.4.0-linux-armel.tar.bz2
   bb098b72ecc83a0e73c426f364bb6a0974fb9360  pypy3-2.4.0-linux-armhf-raring.tar.bz2
   775dc9f8073c4fad7cd220c4b5dd385e7be469e9  pypy3-2.4.0-linux-armhf-raspbian.tar.bz2
   c39061f3e5e7a05548eb89c5cbd3ed81a795879f  pypy3-2.4.0-linux.tar.bz2
   9f01d8c5e18c8c7d54fc6ab77dbf5673a65c2af9  pypy3-2.4.0-osx64.tar.bz2
   2efca54daa4c5da23ef577d70006376e13cfb6b8  pypy3-2.4.0-win32.zip
   438572443ae6f54eb6122d807f104787c5247e01  pypy3-2.4.0-src.tar.bz2
   bd0a91cdda965f42c382bf00f4a2fb8677b929a6  pypy3-2.4.0-src.zip

   895aaf7bba5787dd30adda5cc0e0e7fc297c0ca7  pypy-1.8-sandbox-linux64.tar.bz2
   be94460bed8b2682880495435c309b6611ae2c31  pypy-1.8-sandbox-linux.tar.bz2
